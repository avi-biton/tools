apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/redhat-appstudio/tekton-tools?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "pull_request" && target_branch
      == "main"
    pipelinesascode.tekton.dev/task: tasks/update_private_repo.yaml
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: tools
    appstudio.openshift.io/component: tools
    pipelines.appstudio.openshift.io/type: build
  name: tools-on-pull-request
  namespace: rhtap-o11y-tenant
spec:
  params:
  - name: dockerfile
    value: Dockerfile
  - name: git-url
    value: '{{repo_url}}'
  - name: output-image
    value: quay.io/redhat-user-workloads-stage/gbenhaim-tenant/tekton-tools/test-container:{{revision}}
  - name: path-context
    value: .
  - name: revision
    value: '{{revision}}'
  pipelineSpec:
    params:
    - description: Source Repository URL
      name: git-url
      type: string
    - default: ""
      description: Revision of the Source Repository
      name: revision
      type: string
    tasks:
    - name: init
      params:
      - name: image-url
        value: $(params.output-image)
      - name: rebuild
        value: $(params.rebuild)
      - name: skip-checks
        value: $(params.skip-checks)
      - name: skip-optional
        value: $(params.skip-optional)
      - name: pipelinerun-name
        value: $(context.pipelineRun.name)
      - name: pipelinerun-uid
        value: $(context.pipelineRun.uid)
      taskRef:
        params:
        - name: name
          value: init
        - name: bundle
          value: quay.io/redhat-appstudio-tekton-catalog/task-init:0.2@sha256:3d8f01fa59596a998d30dc700fcf7377f09d60008337290eebaeaf604512ce2b
        - name: kind
          value: task
        resolver: bundles
    - name: clone-repository
      params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.revision)
      runAfter:
      - init
      taskRef:
        params:
        - name: name
          value: git-clone
        - name: bundle
          value: quay.io/redhat-appstudio-tekton-catalog/task-git-clone:0.1@sha256:e13f6e9145b876e858d115abac1dc47fb3df891fcf10e8894672958372bd37dd
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      workspaces:
      - name: output
        workspace: workspace
      - name: basic-auth
        workspace: git-auth
    - name: update-tekton-tools
      runAfter:
      - clone-repository
      workspaces:
      - name: artifacts
        workspace: workspace
      taskRef:
        name: create-pull-request
        kind: Task
      params:
        - name: ORIGIN_REPO
          value: $(params.git-url)
        - name: REVISION
          value: $(params.revision)
        - name: ARTIFACTS_PATH
          value: /workspace/artifacts/source
        - name: TARGET_GH_REPO
          value: redhat-appstudio/tekton-tools
        - name: SCRIPT
          value: |
            set -ex
            grep -rl quay.io/redhat-user-workloads/rhtap-o11y-tenant/tools/tools:.* . | xargs sed -i s@quay.io/redhat-user-workloads/rhtap-o11y-tenant/tools/tools:.*@quay.io/redhat-user-workloads/rhtap-o11y-tenant/tools/tools:31b298e4c2524d827cacbbe681df3ef2c2827d46@gm
    workspaces:
    - name: workspace
    - name: git-auth
      optional: true
  taskRunTemplate: {}
  workspaces:
  - name: workspace
    volumeClaimTemplate:
      metadata:
        creationTimestamp: null
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
#
#
#
#
#
#
#
#---
#apiVersion: tekton.dev/v1
#kind: PipelineRun
#metadata:
#  annotations:
#    build.appstudio.openshift.io/repo: https://github.com/redhat-appstudio/tools?rev={{revision}}
#    build.appstudio.redhat.com/commit_sha: '{{revision}}'
#    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
#    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
#    pipelinesascode.tekton.dev/max-keep-runs: "3"
#    pipelinesascode.tekton.dev/on-cel-expression: event == "pull_request" && target_branch
#      == "main"
#    pipelinesascode.tekton.dev/task: tasks/update_private_repo.yaml
#  creationTimestamp: null
#  labels:
#    appstudio.openshift.io/application: tools
#    appstudio.openshift.io/component: tools
#    pipelines.appstudio.openshift.io/type: build
#  name: tools-on-pull-request
#  namespace: rhtap-o11y-tenant
#spec:
#  params:
#  - name: dockerfile
#    value: Dockerfile
#  - name: git-url
#    value: '{{repo_url}}'
#  - name: image-expires-after
#    value: 5d
#  - name: output-image
#    value: quay.io/redhat-user-workloads/rhtap-o11y-tenant/tools/tools:on-pr-{{revision}}
#  - name: path-context
#    value: .
#  - name: revision
#    value: '{{revision}}'
#  - name: pr-url
#    value: '{{body.head_commit.url}}'
#  pipelineSpec:
#    params:
#    - description: Source Repository URL
#      name: git-url
#      type: string
#    - default: ""
#      description: Revision of the Source Repository
#      name: revision
#      type: string
#    tasks:
#    - name: init
#      params:
#      - name: image-url
#        value: $(params.output-image)
#      - name: rebuild
#        value: $(params.rebuild)
#      - name: skip-checks
#        value: $(params.skip-checks)
#      - name: skip-optional
#        value: $(params.skip-optional)
#      - name: pipelinerun-name
#        value: $(context.pipelineRun.name)
#      - name: pipelinerun-uid
#        value: $(context.pipelineRun.uid)
#      taskRef:
#        params:
#        - name: name
#          value: init
#        - name: bundle
#          value: quay.io/redhat-appstudio-tekton-catalog/task-init:0.2@sha256:3d8f01fa59596a998d30dc700fcf7377f09d60008337290eebaeaf604512ce2b
#        - name: kind
#          value: task
#        resolver: bundles
#    - name: clone-repository
#      params:
#      - name: url
#        value: $(params.git-url)
#      - name: revision
#        value: $(params.revision)
#      runAfter:
#      - init
#      taskRef:
#        params:
#        - name: name
#          value: git-clone
#        - name: bundle
#          value: quay.io/redhat-appstudio-tekton-catalog/task-git-clone:0.1@sha256:b8fddc2d36313a5cde93aba2491205f4a84e6853af6c34ede681f8339b147478
#        - name: kind
#          value: task
#        resolver: bundles
#      when:
#      - input: $(tasks.init.results.build)
#        operator: in
#        values:
#        - "true"
#      workspaces:
#      - name: output
#        workspace: workspace
#      - name: basic-auth
#        workspace: git-auth
##    - name: clone-target-repository
##      params:
##      - name: url
##        value: https://github.com/redhat-appstudio/tekton-tools.git
##      - name: revision
##        value: main
##      - name: subdirectory
##        value: target
##      runAfter:
##      - init
##      taskRef:
##        params:
##        - name: name
##          value: git-clone
##        - name: bundle
##          value: quay.io/redhat-appstudio-tekton-catalog/task-git-clone:0.1@sha256:b8fddc2d36313a5cde93aba2491205f4a84e6853af6c34ede681f8339b147478
##        - name: kind
##          value: task
##        resolver: bundles
##      workspaces:
##      - name: output
##        workspace: workspace
##      - name: basic-auth
##        workspace: git-auth
#
#    - name: test
#      runAfter:
#      - clone-repository
#      workspaces:
#      - name: artifacts
#        workspace: workspace
#      taskSpec:
#        steps:
#        - name: test-step
#          image: registry.access.redhat.com/ubi9/ubi
#          script: |
#            #!/usr/bin/env bash
#            set -ex
#            echo "test"
#            pwd
#            ls -laR
##    - name: update-image-ref
##      runAfter:
##      - clone-repository
##      workspaces:
##      - name: artifacts
##        workspace: workspace
##      taskRef:
##        name: create-pull-request
##        kind: Task
##      params:
##        - name: ORIGIN_REPO
##          value: $(params.git-url)
##        - name: REVISION
##          value: $(params.revision)
##        - name: ARTIFACTS_PATH
##          value: /workspace/artifacts/source
##        - name: TARGET_GH_REPO
##          value: redhat-appstudio/tekton-tools
##        - name: PR_URL
##          value: $(params.pr-url)
##        - name: SCRIPT
##          value: |
##            set -x
##            echo "test"
#    workspaces:
#    - name: workspace
#    - name: git-auth
#      optional: true
#  taskRunTemplate: {}
#  workspaces:
#  - name: workspace
#    volumeClaimTemplate:
#      metadata:
#        creationTimestamp: null
#      spec:
#        accessModes:
#        - ReadWriteOnce
#        resources:
#          requests:
#            storage: 1Gi
#      status: {}
#  - name: git-auth
#    secret:
#      secretName: '{{ git_auth_secret }}'
#  - name: git-remote-auth
#    secret:
#
#
#status: {}
